---
# Source: mq-quarkus-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mq-quarkus-app
  labels:
    app.kubernetes.io/name: mq-quarkus-app
    app.kubernetes.io/instance: mq-quarkus-app
    app: mq-quarkus-app
    app.kubernetes.io/part-of: inventory
    app.openshift.io/runtime: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mq-quarkus-app
      app.kubernetes.io/instance: mq-quarkus-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mq-quarkus-app
        app.kubernetes.io/instance: mq-quarkus-app
    spec:
      serviceAccountName: mq-quarkus-app
      volumes:
      containers:
        - name: mq-quarkus-app
          image: replace:replace
          imagePullPolicy: IfNotPresent
          volumeMounts:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              scheme: HTTP
            timeoutSeconds: 10
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: INGRESS_HOST
              value: ""
            - name: PROTOCOLS
              value: ""
            - name: LOG_LEVEL
              value: "info"
            - name: QM
              valueFrom:
                configMapKeyRef:
                  key: QM
                  name: mq-quarkus-app
            - name: CHANNEL
              valueFrom:
                configMapKeyRef:
                  key: CHANNEL
                  name: mq-quarkus-app
            - name: CONNECTION_NAME
              valueFrom:
                configMapKeyRef:
                  key: CONNECTION_NAME
                  name: mq-quarkus-app
            - name: QUEUE_NAME
              valueFrom:
                configMapKeyRef:
                  key: QUEUE_NAME
                  name: mq-quarkus-app
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  key: APP_NAME
                  name: mq-quarkus-app
            - name: OPENTRACING_JAEGER_ENABLED
              value: "false"
          envFrom:
            - configMapRef:
                name: jaeger-config
                optional: true
            - secretRef:
                name: jaeger-access
                optional: true
          resources:
            null
